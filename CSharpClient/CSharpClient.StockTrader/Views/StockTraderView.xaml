<views:MvxWpfView
    xmlns:views="clr-namespace:MvvmCross.Platforms.Wpf.Views;assembly=MvvmCross.Platforms.Wpf"
    xmlns:mvx="clr-namespace:MvvmCross.Platforms.Wpf.Binding;assembly=MvvmCross.Platforms.Wpf"
    x:Class="CSharpClient.StockTrader.Views.StockTraderView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:CSharpClient.StockTrader.Views"
    xmlns:viewmodels="clr-namespace:CSharpClient.MvxLibrary.ViewModels;assembly=CSharpClient.MvxLibrary" 
    d:DataContext="{d:DesignInstance Type=viewmodels:StockTraderViewModel}"
    mc:Ignorable="d" 
    FontSize="20" FontFamily="Helvetica" 
    d:DesignHeight="450" d:DesignWidth="800"
    Background="#FF130D40" Foreground="Gainsboro">

    <views:MvxWpfView.Resources>
        
        <DataTemplate x:Key="StockLineTemplate">
            <Border CornerRadius="5" HorizontalAlignment="Stretch" Padding="5" Margin="3">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Width="Auto">
                    <TextBlock Width="auto">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0} {1}   High: {2}   Low: {3}   RAmt: ">
                                <Binding Path="Symbol"/>
                                <Binding Path="Exchange"/>
                                <Binding Path="DailyHighPrice"/>
                                <Binding Path="DailyLowPrice"/>
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                    <TextBox MinWidth="150" Text="{Binding Path=RAmount}"/>
                </StackPanel>
            </Border>
        </DataTemplate>
    </views:MvxWpfView.Resources>
    
    <Grid Margin="10,15,10,10">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions >

        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition MinHeight="25" Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition MinHeight="20" Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition MinHeight="20" Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition MinHeight="10" Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition MinHeight="10" Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>


        <Button Grid.Row="0" Grid.Column="1" x:Name="ConnectIbButton" Padding="10 0 10 0" 
                Background="{DynamicResource {x:Static SystemColors.InactiveBorderBrushKey}}"
                Content="{Binding ConnectionButtonText}" mvx:Bi.nd="Command ConnectIbCommand"   >
            <Button.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="4"/>
                </Style>
            </Button.Resources>
        </Button>

        <TextBlock Grid.Row="0" Grid.Column="2" x:Name="IbConnectionLabel" Padding="5 0 5 0" TextAlignment="Center" 
                   Text="{Binding IsConnectedLabel}">
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Setter Property="Foreground" Value="OrangeRed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IbIsConnected}"
                                     Value="True">
                            <Setter Property="Foreground" Value="LimeGreen"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>

        <Button Grid.Row="0" Grid.Column="3" Padding="10 0 10 0" Content="Add New Stock" 
		                Background="{DynamicResource {x:Static SystemColors.InactiveBorderBrushKey}}"
		                mvx:Bi.nd="Command AddNewStockCommand" IsEnabled="{Binding IbIsConnected}">
            <Button.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="4"/>
                </Style>
            </Button.Resources>
        </Button>

        <ListBox Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="3" MinWidth="500" HorizontalContentAlignment="Stretch" 
                 ItemsSource="{Binding StockRows}" ItemTemplate="{StaticResource StockLineTemplate}">
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>

    </Grid>
</views:MvxWpfView>
